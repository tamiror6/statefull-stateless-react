[{"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/index.js":"1","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/statefull.js":"2","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/reportWebVitals.js":"3","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/components.js":"4","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/ComponentsStateless.js":"5"},{"size":506,"mtime":1613662743431,"results":"6","hashOfConfig":"7"},{"size":2797,"mtime":1613909771316,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1613576681816,"results":"9","hashOfConfig":"7"},{"size":7131,"mtime":1614011044434,"results":"10","hashOfConfig":"7"},{"size":2480,"mtime":1613898871726,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vu5uhh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/index.js",[],["24","25"],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/statefull.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/reportWebVitals.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/components.js",["26"],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/ComponentsStateless.js",["27","28"],"const Title = (props) => {\n  return <h1>{props.text}</h1>;\n};\n\nconst Heading = (props) => {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <h2>{props.subtitle}</h2>\n    </div>\n  );\n};\n\nconst ImageView = (props) => {\n  return (\n    <figure>\n      <img src={props.src} />\n      <figcaption>{props.caption}</figcaption>\n    </figure>\n  );\n};\n\nconst SimpleGallery = (props) => {\n  return (\n    <div>\n      {props.images.map((src, index) => (\n        <img key={index} src={src}></img>\n      ))}\n    </div>\n  );\n};\n\nconst TodoItem = (props) => {\n  return (\n    <p\n      onClick={props.onClick}\n      style={{ textDecoration: props.done ? \"line-through\" : \"\" }}\n    >\n      {props.title}\n    </p>\n  );\n};\n\nconst SimpleCanvas = (props) => {\n  return (\n    <div className=\"simple-canvas \">\n      {props.data.map((row) => (\n        <div className=\"row\">\n          {row.map((color) => (\n            <div className=\"cell\" style={{ backgroundColor: color }}></div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nconst SpecialButton = (props) => (\n  <button\n    onClick={(e) => {\n      if (e.ctrlKey || e.metaKey) {\n        props.onSpecialClick();\n      } else {\n        props.onClick();\n      }\n    }}\n  >\n    {props.children}\n  </button>\n);\n\nconst TodoItem2 = (props) => (\n  <div className=\"todo-2\">\n    {\" \"}\n    <TodoItem\n      onClick={props.onClick}\n      done={props.completed}\n      title={props.title}\n    />\n    <SpecialButton\n      onClick={() => {\n        if (window.confirm(\"are u sure?\")) {\n          props.onRemove();\n        }\n      }}\n      onSpecialClick={props.onRemove}\n    >\n      ðŸ—‘\n    </SpecialButton>\n  </div>\n);\n\nconst SimpleCanvas2 = (props) => {\n  return (\n    <div className=\"simple-canvas \">\n      {props.data.map((row, rowIndex) => (\n        <div className=\"row\">\n          {row.map((color, colIndex) => (\n            <div\n              className=\"cell\"\n              style={{ backgroundColor: color }}\n              onClick={() => {\n                props.onCellClick(rowIndex, colIndex, color);\n              }}\n            ></div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst TodoApp = (props) =>\n  props.items.map((item, index) => (\n    <TodoItem2\n      title={item.title}\n      completed={item.done}\n      onRemove={() => props.onRemove(index)}\n    ></TodoItem2>\n  ));\nexport {\n  Title,\n  Heading,\n  ImageView,\n  SimpleGallery,\n  TodoItem,\n  SimpleCanvas,\n  SpecialButton,\n  TodoItem2,\n  SimpleCanvas2,\n  TodoApp,\n};\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":17,"column":7,"nodeType":"39","endLine":17,"endColumn":30},{"ruleId":"37","severity":1,"message":"38","line":27,"column":9,"nodeType":"39","endLine":27,"endColumn":36},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'SimpleCanvas' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]