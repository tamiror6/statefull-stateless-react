[{"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/index.js":"1","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/reportWebVitals.js":"2","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/components.js":"3","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/ComponentsStateless.js":"4","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/statefull/statefull.js":"5","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/typescript/statefull.tsx":"6","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/typescript/stateless.tsx":"7","/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/stateless/stateless.js":"8"},{"size":516,"mtime":1614467343505,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1613576681816,"results":"11","hashOfConfig":"10"},{"size":8222,"mtime":1614172572171,"results":"12","hashOfConfig":"10"},{"size":2849,"mtime":1614172570352,"results":"13","hashOfConfig":"10"},{"size":2808,"mtime":1614186391501,"results":"14","hashOfConfig":"10"},{"size":7100,"mtime":1614467766601,"results":"15","hashOfConfig":"10"},{"size":3930,"mtime":1614449173444,"results":"16","hashOfConfig":"10"},{"size":6346,"mtime":1614437664536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19mnlln",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/index.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/reportWebVitals.js",[],["37","38"],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/components.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/ComponentsStateless.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/statefull/statefull.js",[],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/typescript/statefull.tsx",["39","40"],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/typescript/stateless.tsx",["41","42"],"\nimport * as React from 'react';\ntype TitleProps={\n  text:string\n}\nconst Title: React.FC<TitleProps> = (props) => {\n    return <h1>{props.text}</h1>;\n  };\n  \n  interface HeadingProps{\n    title:string,\n    subtitle:string,\n  }\n  const Heading:React.FC<HeadingProps> = (props) => {\n    return (\n      <div>\n        <h1>{props.title}</h1>\n        <h2>{props.subtitle}</h2>\n      </div>\n    );\n  };\n\n\n  type imageViewProps =  {\n    src:string;\n    caption:string;\n  }\n  \n  const ImageView = (props:imageViewProps) => {\n    return (\n      <figure>\n        <img src={props.src} />\n        <figcaption>{props.caption}</figcaption>\n      </figure>\n    );\n  };\n  \ninterface SimpleGalleryProps{\nimages:string[]\n}\n\n  const SimpleGallery = (props:SimpleGalleryProps) => {\n    return (\n      <div>\n        {props.images.map((src, index) => (\n          <img key={index} src={src}></img>\n        ))}\n      </div>\n    );\n  };\n\n\n  type todoItemProps ={\n    onClick() :void;\n    title:string;\n    done:boolean;\n\n  }\n  const TodoItem = (props:todoItemProps) => {\n    return (\n      <p\n        onClick={props.onClick}\n        style={{ textDecoration: props.done ? \"line-through\" : \"\" }}\n      >\n        {props.title}\n      </p>\n    );\n  };\n\n  type SimpleCanvasProps = {\n    data:string[][],\n  }\n  \n  const SimpleCanvas = (props:SimpleCanvasProps) => {\n    return (\n      <div className=\"simple-canvas \">\n        {props.data.map((row,rowIndex) => (\n          <div key={rowIndex} className=\"row\">\n            {row.map((color,colIndex) => (\n              <div key={colIndex} className=\"cell\" style={{ backgroundColor: color }}></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  type specialButtonProps= {\n    onSpecialClick() :void;\n    onClick():void;\n    children:string;\n  }\n\n  const SpecialButton = (props:specialButtonProps) => (\n    <button\n      onClick={(e) => {\n        if (e.ctrlKey || e.metaKey) {\n          props.onSpecialClick();\n        } else {\n          props.onClick();\n        }\n      }}\n    >\n      {props.children}\n    </button>\n  );\n  \n\ntype todoItem2Props = {\n  onClick():void;\n  completed:boolean;\n  onRemove():void;\n  title:string;\n}\n  const TodoItem2 = (props:todoItem2Props) => (\n    <div className=\"todo-2\">\n      {\" \"}\n      <TodoItem\n        onClick={props.onClick}\n        done={props.completed}\n        title={props.title}\n      />\n      <SpecialButton\n        onClick={() => {\n          if (window.confirm(\"are u sure?\")) {\n            props.onRemove();\n          }\n        }}\n        onSpecialClick={props.onRemove}\n      >\n        ðŸ—‘\n      </SpecialButton>\n    </div>\n  );\n  \n\n  interface SimpleCanvas2Props{\n    data:string[][];\n    onCellClick(rowIndex:number, colIndex:number, color:string):void;\n\n  }\n  const SimpleCanvas2 = (props:SimpleCanvas2Props) => {\n    return (\n      <div className=\"simple-canvas \">\n        {props.data.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"row\">\n            {row.map((color, colIndex) => (\n              <div\n              key={colIndex}\n                className=\"cell\"\n                style={{ backgroundColor: color }}\n                onClick={() => {\n                  props.onCellClick(rowIndex, colIndex, color);\n                }}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n  type ListItem={\n    title:string,\n    done:boolean,\n}\n\n  interface TodoAppProps{\n    items:ListItem[];\n    onRemove(index:number):void;\n  }\n  const TodoApp = (props:TodoAppProps) =>\n    props.items.map((item, index) => (\n      <TodoItem2\n        key = {item.title}\n        title={item.title}\n        completed={item.done}\n        onRemove={() => props.onRemove(index)}\n        onClick={()=>{}}\n      ></TodoItem2>\n    ));\n  export {\n    Title,\n    Heading,\n    SimpleGallery,\n    TodoItem,\n    SimpleCanvas,\n    SpecialButton,\n    TodoItem2,\n    SimpleCanvas2,\n    TodoApp,\n    ImageView,\n  };\n  ",["43","44"],"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-appp/src/stateless/stateless.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":32,"column":9,"nodeType":"57","endLine":32,"endColumn":32},{"ruleId":"55","severity":1,"message":"56","line":46,"column":11,"nodeType":"57","endLine":46,"endColumn":38},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"58","severity":1,"message":"59","line":162,"column":7,"nodeType":"57","endLine":162,"endColumn":16},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'formatWithOptions' is defined but never used.","Identifier","unusedVar","'SimpleCanvas' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","no-global-assign","no-unsafe-negation"]