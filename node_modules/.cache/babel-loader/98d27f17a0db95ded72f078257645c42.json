{"ast":null,"code":"var _jsxFileName = \"/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-app/src/statefull.js\";\nimport React from \"react\";\nimport \"./statefull.css\";\nimport * as Comps from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = ({\n  title,\n  description,\n  exampleProps,\n  children\n}) => {\n  const copiedProps = { ...exampleProps\n  };\n  Object.keys(copiedProps).forEach(key => {\n    if (typeof copiedProps[key] === \"function\") {\n      copiedProps[key] = copiedProps[key].toString();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rendered component:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Container;\nconst sandboxData = [{\n  name: \"Counter\",\n  description: \"Counter component. Shows a number, has a + and - button to control the numer.\"\n}, {\n  name: \"Gallery\",\n  description: 'Wrap <SimpleGallery/> from part-1 with a statefull component that has an \"add\" button, that using \"window.prompt\" will ask for a new src for a new image ',\n  mandatory: true\n}, {\n  name: \"Canvasv2\",\n  description: `Change the canvas from #6 so that clicking on each cell will toggle the color (cycling between some colors, i.e. 'red', 'yellow', 'blue', 'orange')`\n}, {\n  name: \"TodoApp\",\n  description: `Change <TodoApp> from #10 so the items are now stateful.\n    You will need to support adding, removing and toggling items (done or undone). Add an input and \"add\" button to your todo app from , and also make sure that removing items works. Bonus: add a navigation bar that allows users to filter between tasks; \"only completed\", \"only incomplete\" and \"all\". Bonus: add a textual search bar.`,\n  mandatory: true\n}];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Stateful Components Exercises!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Each one of the items is an exercise. You should write a component in the \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Components.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), \" file with the right name (see the initial\", \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" one).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Note that only the components file needs to be changed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), sandboxData.map((exercise, i) => {\n      const Comp = Comps[exercise.name];\n      return /*#__PURE__*/_jsxDEV(Container, {\n        title: `${i + 1}. ${exercise.name}`,\n        description: exercise.description,\n        children: Comp ? /*#__PURE__*/_jsxDEV(Comp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: [\"Nothing written yet. Make sure to expose a a component called\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), \" from \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Components.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Do not forget to commit and push to your fork!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tamiro/Desktop/wix training/react/statelessStatefull/my-app/src/statefull.js"],"names":["React","Comps","Container","title","description","exampleProps","children","copiedProps","Object","keys","forEach","key","toString","sandboxData","name","mandatory","App","map","exercise","i","Comp","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./statefull.css\";\n\nimport * as Comps from \"./components\";\n\nconst Container = ({ title, description, exampleProps, children }) => {\n  const copiedProps = { ...exampleProps };\n  Object.keys(copiedProps).forEach((key) => {\n    if (typeof copiedProps[key] === \"function\") {\n      copiedProps[key] = copiedProps[key].toString();\n    }\n  });\n  return (\n    <div className={\"container\"}>\n      <h2>{title}</h2>\n      <h3>Description</h3>\n      <p>{description}</p>\n      <h3>Rendered component:</h3>\n      <div className={\"content\"}>{children}</div>\n    </div>\n  );\n};\n\nconst sandboxData = [\n  {\n    name: \"Counter\",\n    description:\n      \"Counter component. Shows a number, has a + and - button to control the numer.\",\n  },\n  {\n    name: \"Gallery\",\n    description:\n      'Wrap <SimpleGallery/> from part-1 with a statefull component that has an \"add\" button, that using \"window.prompt\" will ask for a new src for a new image ',\n    mandatory: true,\n  },\n  {\n    name: \"Canvasv2\",\n    description: `Change the canvas from #6 so that clicking on each cell will toggle the color (cycling between some colors, i.e. 'red', 'yellow', 'blue', 'orange')`,\n  },\n  {\n    name: \"TodoApp\",\n    description: `Change <TodoApp> from #10 so the items are now stateful.\n    You will need to support adding, removing and toggling items (done or undone). Add an input and \"add\" button to your todo app from , and also make sure that removing items works. Bonus: add a navigation bar that allows users to filter between tasks; \"only completed\", \"only incomplete\" and \"all\". Bonus: add a textual search bar.`,\n    mandatory: true,\n  },\n];\n\nconst App = () => {\n  return (\n    <div id=\"app\">\n      <h1>React Stateful Components Exercises!</h1>\n      <p>\n        Each one of the items is an exercise. You should write a component in\n        the <em>Components.js</em> file with the right name (see the initial{\" \"}\n        <em>Title</em> one).\n      </p>\n      <p>Note that only the components file needs to be changed!</p>\n      {/* <marquee>\n        <em>Good luck!</em>\n      </marquee> */}\n      {sandboxData.map((exercise, i) => {\n        const Comp = Comps[exercise.name];\n        return (\n          <Container\n            title={`${i + 1}. ${exercise.name}`}\n            description={exercise.description}\n            key={i}\n          >\n            {Comp ? (\n              <Comp />\n            ) : (\n              <p style={{ color: \"red\" }}>\n                Nothing written yet. Make sure to expose a a component called{\" \"}\n                <strong>{exercise.name}</strong> from <em>Components.js</em>\n              </p>\n            )}\n          </Container>\n        );\n      })}\n      <h5>Do not forget to commit and push to your fork!</h5>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}